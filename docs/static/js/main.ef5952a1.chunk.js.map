{"version":3,"sources":["componentes/AddCategory.js","componentes/GifGridItem.js","helpers/getGifs.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"8KAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,uBAAMC,SAVS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACpCC,QAAQC,IAAI,iBAEhBR,EAAc,KAId,UACI,6CACA,6BAAKD,IACL,uBACIU,KAAK,OACLC,MAAOX,EACPY,SAnBY,SAACT,GACrBF,EAAcE,EAAEU,OAAOF,c,QCLlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAIpC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCTHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,yDAC2CO,UAAUF,GADrD,sDAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAaZY,GAbY,4CAAH,sDCIPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAGrB,ECJwB,SAAEA,GAE1B,MAA0BvB,mBAAS,CAC/B6B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAW,WACPjB,EAAQC,GACHiB,MAAM,SAAAC,GACHC,YAAW,WACPJ,EAAS,CACLT,KAAMY,EACNL,SAAS,MAEd,UAIb,CAACb,IAEIc,EDjBwBM,CAAapB,GAAhCU,EAAZ,EAAOJ,KAAaO,EAApB,EAAoBA,QAUpB,OACI,qCACI,oBAAIjB,UAAU,oCAAd,SAAmDI,IAClDa,GAAW,mBAAGjB,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEQc,EAAOF,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,eAEQA,GADCA,EAAIhB,aEtBpB4B,EAAe,WAExB,MAAoC5C,mBAAS,CAAC,eAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAOA,OACI,qCACI,uBACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ8C,EAAWd,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YClBlCuB,IAASC,OACF,cAAC,EAAD,IACCC,SAASC,eAAe,W","file":"static/js/main.ef5952a1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState(\"\")\r\n\r\n    const handleInputValue =(e) =>{\r\n        setinputValue(e.target.value)\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 1){\r\n           setCategories(cats =>[inputValue, ...cats])\r\n            console.log('Submit hecho');\r\n        }\r\n        setinputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>AddCategory</h2>\r\n            <h2>{inputValue}</h2>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputValue}\r\n             />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n  //  console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=5&q=${encodeURI(category)}&api_key=yKcFGXFmyWXzLooUsGNIOVYtevqzvC8Q`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url  //pongo el signo de ? para preguntar si tiene imagenes usalo tal valor\r\n\r\n        }\r\n    })\r\n    return gifs; //asiganmos los gifs a images\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n            //los dos puntos despues de data es para referirse a data como images\r\n    const {data:images, loading} = useFetchGifs(category);\r\n  \r\n  \r\n  \r\n    // console.log(loading);\r\n   // console.log(data);\r\n  \r\n  \r\n  \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => ( \r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        {...img}\r\n                    />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    \r\n    useEffect( ()=>{\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                }, 1000);\r\n\r\n\r\n            })\r\n    },[category])\r\n\r\n    return state; // el estate es {data:[], loading: true}\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './componentes/AddCategory';\r\nimport { GifGrid } from './componentes/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Pounch'])\r\n\r\n    // const handleAdd =()=>{\r\n    //     setCategories([ 'South Park',   ...categories]);\r\n\r\n    // }\r\n\r\n    return (\r\n        <> \r\n            <hr />\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key={ category}\r\n                            category= {category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n       <GifExpertApp />,\n        document.getElementById('root')\n\n);\n\n"],"sourceRoot":""}